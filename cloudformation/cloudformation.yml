AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create
  an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based
  on the region in which the stack is run. This example creates an EC2 security
  group for the instance to give you SSH access. **WARNING** This template
  creates an Amazon EC2 instance. You will be billed for the AWS resources used
  if you create a stack from this template.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: amazonami
    ConstraintDescription: must be the name of an existing EC2 KeyPair
  ImageAmi:
    Description: The AMI you want to build
    Type: String
    Default: '#{Project.AWS.EC2.AMI}'
    ConstraintDescription: must be a valid AMI for this region
  WebInstanceName:
    Type: String
    Default: '#{Project.AWS.CF.StackName}'
  SubnetIdParameter:
    Type: String
    Default: subnet-ed7dde8b
  SecurityGroupIdParameter:
    Type: String
    MinLength: "1"
    Default: sg-03c06e430e20b0059    
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    ap-southeast-2:
      HVM64: ami-05c029a4b57edda9e
      HVMG2: NOT_SUPPORTED
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
           - 
              !Ref SecurityGroupIdParameter
          SubnetId: !Ref SubnetIdParameter
      KeyName: !Ref KeyName
      ImageId: !Ref ImageAmi
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -x
            serverUrl="#{Global.OctopusServerUrl}"
            apiKey="#{Global.OctopusApiKey}"
            name="#{Project.AWS.CF.StackName}"        
            environment="#{Octopus.Environment.Name}"
            serverCommsPort=10943
            role="web"
            configFilePath="/etc/octopus/default/tentacle-default.config"
            applicationPath="/home/Octopus/Applications/"
            spaceName="#{Global.Octopus.Space.Name}"
            configFilePath="/etc/octopus/default/tentacle-default.config"
            applicationPath="/home/Octopus/Applications/"
            sudo wget https://rpm.octopus.com/tentacle.repo -O /etc/yum.repos.d/tentacle.repo
            sudo yum install -y tentacle
            sudo /opt/octopus/tentacle/Tentacle create-instance --config "$configFilePath"
            sudo /opt/octopus/tentacle/Tentacle new-certificate --if-blank
            sudo /opt/octopus/tentacle/Tentacle configure --noListen True --reset-trust --app "$applicationPath"
            sudo echo "Registering the Tentacle $name with server $serverUrl in environment $environment with role $role for testing"
            sudo /opt/octopus/tentacle/Tentacle register-with --server "$serverUrl" --apiKey "$apiKey" --space "$spaceName" --name "$name" --env "$environment" --role "$role" --comms-style "TentacleActive" --server-comms-port $serverCommsPort
            sudo /opt/octopus/tentacle/Tentacle service --install --start
      Tags:
        -
          Key: Name
          Value: !Ref WebInstanceName
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicIp
